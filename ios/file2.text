*creating a backend*
model directory
todo_model.dart
- class TodoModel
 - int? id;
 - final String title;
 - DateTime createDate;
 - bool isChecked;
TodoModel({})
 - this.id, required this.title, required this.createDate, required this.isChecked

Map<String, dynamic> toMap(){}
 - return {}
  - 'id' : id,
  - 'title' : title,
  - 'createDAte' : createDate.toString(),
  - 'isChecked' : isChecked ? 1 : 0,

override // for debugging
String toString(){}
 - return
  - 'Todo(id: $id, title: $title, createDate: $createDate, isChecked: $isChecked)';






*creating database model crud*
database_model.dart
terminal
- flutter pub add sqflite
- flutter pub add path
import 'package sqflite.dart'
import 'package path.dart'
import './todo_model.dart'

class DatabaseConnect{}
 - Database? _database;
- Future<Database> get database async {}
  -final dbpath = await getDatabasesPath();
  - const dbname = 'todo.db';
  - final path = join(dbpath, dbname);
  - _database = await openDatabase(path, version: 1, onCreate: _createDB);
  - return _database!;

Future<void> _createDB(Database db, int version) async{}
 - await db.execute('''CREATE TABLE todo()''');
   - CREATE TABLE todo()
    - id INTEGER PRIMARY KEY AUTOINCREMENT,
    - title TEXT,
    - createDate TEXT,
    - isChecked INTEGER

Future<void> insertTodo(Todo todo) async{}
 - final db = await database;
 - await db.insert()
  - 'todo',
  - todo.toMap()
  - conflictAlgorithm: ConflictAlgorithm.replace

Future<void> deleteTodo(Todo todo) async{}
 - final db = await database;
 - await db.delete();
  - 'todo',
  - where: 'id == ?',
  - whereArgs: [todo.id]

Future<List<Todo>> getTodo() async{}
 - final db = await database;
 - List<Map<String, dynamic>> item = await db.query();
   - 'todo',
   - orderBy: 'id DESC',
- return List.generate();
 - item.length,
 - (i) => TodoModel(),
   - id: items[i]['id'],
   - title: items[i]['title'],
   - createDate: DateTime.parse(items[i]['createDate']),
   - isChecked: items[i]['isChecked'] == 1 ? true : false,






*create homepage*
import 'package:flutter/material.dart';
import '../models/db_model.dart';
import '../models/todo_model.dart';
import '../widgets/user_input.dart';
import '../widgets/todo_list.dart';

var db = DatabaseConnect();
void addItem(Todo todo) async {
    await db.insertTodo(todo);
    setState(() {});
  }

void deleteItem(Todo todo) async {
    await db.deleteTodo(todo);
    setState(() {});
  }

body: Column(
        children: [
          Todolist(insertFunction: addItem, deleteFunction: deleteItem),
          // we will add our widgets here.
          UserInput(insertFunction: addItem),
        ],
      ),





*create user input*
user_input.dart
textController = TextEditingController();
final Function insertFunction;
stateless
required this.insertFunction
- Container()
 - padding: EdgeIn..symmetric(h:5, v:8)
 - child
  - Row(
        children: [
          // this will be the input box
          Expanded(
            child: Container(
              padding: const EdgeInsets.symmetric(horizontal: 10),
              decoration: BoxDecoration(
                border: Border.all(color: Colors.black45),
                borderRadius: BorderRadius.circular(15),
              ),
              child: TextField(
                controller: textController,
                decoration: const InputDecoration(
                  hintText: 'add new todo',
                  border: InputBorder.none,
                ),
              ),
            ),
          ),
          const SizedBox(width: 10),
          // this will be the button
          GestureDetector(
            onTap: () {
              // create a todo
              var myTodo = TodoModel(
                  title: textController.text,
                  createDate: DateTime.now(),
                  isChecked: false);
              // pass this to the insertfunction as parameter
              insertFunction(myTodo);
              print(myTodo);
            },
            child: Container(
              decoration: BoxDecoration(
                color: Theme.of(context).primaryColor,
                borderRadius: BorderRadius.circular(15),
              ),
              padding: const EdgeInsets.symmetric(horizontal: 25, vertical: 18),
              child: const Text(
                'Add',
                style: TextStyle(
                  color: Colors.white,
                  fontWeight: FontWeight.bold,
                ),
              ),
            ),
          )
        ],
      ),



*create todo card*
import 'package:flutter/material.dart';
import '../model/todo_model.dart';

class TodoCard extends StatefulWidget {
  final int id;
  final String title;
  final DateTime createDate;
  bool isChecked;
  final Function insertFunction;
  final Function deleteFunction;
  TodoCard({
    required this.id,
    required this.title,
    required this.createDate,
    required this.isChecked,
    required this.insertFunction,
    required this.deleteFunction,
    Key? key}) : super(key: key);

  @override
  State<TodoCard> createState() => _TodoCardState();
}

class _TodoCardState extends State<TodoCard> {
  @override
  Widget build(BuildContext context) {
    var anotherTodo = TodoModel(id: widget.id, title: widget.title, createDate: widget.createDate, isChecked: widget.isChecked);
    return Card(
      child: Row(
        children: [
          Container(
            margin: const EdgeInsets.symmetric(horizontal: 10, vertical: 10),
            child: Checkbox(
              value: widget.isChecked,
              onChanged: (bool? value){
                setState(() {
                  widget.isChecked = value!;
                });
                anotherTodo.isChecked = value!;
                widget.insertFunction(anotherTodo);
            },
            ),
          ),
          Expanded(child:
          Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Text(
                widget.title,
                style: const TextStyle(
                    fontWeight: FontWeight.bold,
                    fontSize: 18),
              ),

              const SizedBox(height: 5,),

              Text(widget.createDate.toString(),
              style: const TextStyle(
                fontWeight: FontWeight.bold,
                color: Color(0xFF616161),
                fontSize: 12
              ),
              ),
            ],
          ),
          ),
          IconButton(onPressed: (){
            widget.deleteFunction(anotherTodo);
          },
            icon: Icon(Icons.close),
          ),
        ],
      ),
    );
  }
}





*create todo list*
todo_list.dart
import '../model/database_model.dart';
import './todo_card.dart';
stateless
final Function insertFunction;
final Function deleteFunction;
required this.insertFunction
require this.delete.....
var db = DatabaseConnect();
return Expanded(
        child: FutureBuilder(
          future: db.getTodo(),
          initialData: [],
          builder: (BuildContext context, AsyncSnapshot<List> snapshot){
            var data = snapshot.data;
            var datalength = data!.length;

            return datalength == 0 ?
                const Center(
                  child: Text('there is no data'),
                ) : ListView.builder(
              itemCount: datalength, itemBuilder: (context, index) =>
                TodoCard(
                    id: data[index].id,
                    title: data[index].title,
                    createDate: data[index].createDate,
                    isChecked: data[index].isChecked,
                    insertFunction: insertFunction,
                    deleteFunction: deleteFunction
                ),
            );
          },
        )
    );